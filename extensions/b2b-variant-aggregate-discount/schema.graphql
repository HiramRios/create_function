type FunctionConfiguration {
  message: String
}

type Query {

  cart: Cart
  discount: Discount
  functionConfiguration: FunctionConfiguration
}

type Discount {
  discountClasses: [String!]
}

type Cart {
  deliveryGroups: [DeliveryGroup!]
  buyerIdentity: BuyerIdentity
  lines: [CartLine!]
}

type DeliveryGroup {
  id: ID!
}

type BuyerIdentity {
  company: Company
  companyLocation: CompanyLocation
}

type Company {
  id: ID!
  name: String
}

type CompanyLocation {
  id: ID!
  name: String
}

type CartLine {
  id: ID!
  quantity: Int!
  cost: CartLineCost!
  merchandise: Merchandise!
}

type CartLineCost {
  amountPerQuantity: Money!
}

type Money {
  amount: Float!
  currencyCode: String!
}

union Merchandise = ProductVariant

type ProductVariant {
  id: ID!
  product: Product!
}

type Product {
  id: ID!
  title: String
}


schema {
  query: Query
}
